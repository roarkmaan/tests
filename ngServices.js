//Data retrieval/formatting for use in charts, tables, maps, and animations
angular.module('services',['uiDirectives'])
.factory('getData',['$http',function($http){
	var cache = {id:Math.round(Math.random()*1000)}; //object that can be used to store retrieved data
	
	//Define a MetroData class
	//api requests must indicate the base uri, a category or project ID, an indicator ID, dates (*array* of strings or a hyphenated range in yyyy, mm.yyyy, or qn.yyyy format), 
	//and by-group filters that specify the levels of by vars to select in *object literal* format where key is the variable name and value is the level to select 
	function MetroData(_){
		this.request = {base:null,catpro:null,id:null,geo:null,dates:null,byfilters:null};
		this.requestReady = false;
		this.status = null;
		this.data = null;
		//this.otherArgs = {};
		//optionally, the user can pass an object with the request mappings and they will be assigned to the request object
		if(typeof _ !== "undefined"){
			for(i in _){
				if(this.request.hasOwnProperty(i)){this.request[i] = _[i];}
				//else{this.otherArgs[i] = _[i];}
			}
		} 
	}
	
	//determine if the current state of the request is valid
	MetroData.prototype.checkRequest = function(){
		var ref = this.request;
		var c1 = ref.base!==null && ref.catpro!==null && ref.id!==null && ref.geo!==null && ref.dates!==null && ref.byfilters!==null;
		var c2 = angular.isArray(ref.dates) && angular.isObject(ref.byfilters);
		this.requestReady = c1&&c2;
		return this.requestReady;
	}

	//find out which properties still need setting to create a valid request
	MetroData.prototype.checkRequestUnfilled = function(){
		var r = [];
		if(!this.checkRequest()){
			for(i in this.request){ if(this.request[i]===null){r.push(i)} };
		}
		return r;
	}

	//set or get request parameters
	MetroData.prototype.par = function(attr,val){
		if(!(attr in {base:1,catpro:1,id:1,dates:1,geo:1,byfilters:1})){return this} // do nothing if the attribute is not allowable

		//with valid attribute to target...
		if(val!==null && typeof val !== "undefined"){
			this.request[attr] = val;
			return this; //set the attribute and return data object
		}
		else if(typeof val === "undefined"){
			return this.request[attr]; //return the value of the request attribute (if no value is specified)
		}
		else{
			return this; //return the object, unchanged
		}
	}

	MetroData.prototype.buildUri = function(){
		if(!this.checkRequest()){return "/ERROR"}

		var r = this.request;
		var s = "/";
		
		var dates = "";
		for(var i=0;i<r.dates.length;i++){
			dates = (i===(r.dates.length-1)) ? dates + r.dates[i] : dates + r.dates[i] + "-";
		}

		var byfilters = "";
		for(var i in r.byfilters){
			byfilters = byfilters + i + "=" + r.byfilters[i] + "-";
		}
		byfilters = byfilters.replace(/-$/,""); //hack off the last "-"

		//Requests come in the form of base uri/category/indicator/geo/date1-date2-daten/by1-by2-byn/filter1=val-filter2=val
		//add in a transformation request?
		var u = r.base +s+ r.catpro +s+ r.id +s+ r.geo +s+ dates +s+ byfilters + "/extra"; 
		//return "http://127.0.0.1:5000/todo/api/v1.0/tasks/1";
		return u;
	}

	//get the data
	MetroData.prototype.getUri = function(){
		if(this.checkRequest()){
			var self = this; //the reference to this instance is lost in the nested function of the $http callback
			var uri = this.buildUri();
			$http.get(uri)
			 .success(function(a,b,headers,config){
			 	self.data = a; //self is captured with the original this
			 	self.status = b;
			 	//console.log(a);
			 	return a; //return the data
			 })
			 .error(function(data, status, headers, config){
			 	console.log(data);
			 	self.data = null;
			 	self.status = status;
			 	return null; //return the data (null in case of failed request) 
			 });
		}
	}

	//return function. i.e. the "service" of this service factory function. the factory function would typically be assigned to the $get property of a service provider when using the more verbose syntax of the $provide service.
	//the $provide.factory method is exposed on the module class, enabling this syntax--'angular.module('abc',[]).factory()--and preventing the overhead of the module.config(fn) syntax.
	//the angular injector only stamps out one instance of the service (i.e. __init__ in this case), caching it for future uses 
	function __init__(_){
		return new MetroData(_);
	};
	return __init__;
}]);	

//Get asset
angular.module('services').controller('testCtrl',['getData','getMetros','$scope',function(getData,gm,$scope){
	/*var a = $scope.a = getData({base:"http://127.0.0.1:5000",misc:"dude",id:"var2"});
	a.par("byfilters",{race:"B",sex:"M"});
	a.par("geo","M10140").par("catpro","CleanEcon").par("id","var200").par("by",["race","sex"]).par("dates",[1990,2000,2010]);
	a.getUri();
	
	$scope.data = null;
	$scope.$watch("a",function(n,o){$scope.data = a.data;console.log(n)},true)*/

	$scope.aa = gm(false,$scope);
	$scope.$watch('aa',function(n,o){
		console.log(n);
	},
	true)

	$scope.var1 = 1;
	$scope.var2 = 2;

	$scope.$eval(function(scope){
		var1 = 100;
		var2 = 200;
	});

	console.log("Scope vars are still unchanged: " + $scope.var1 + ", " + $scope.var2)
	console.log("Above approach just created two globals: " + var1 + ", " + var2)

	//with the function form, assignment needs to be made to scope properties
	$scope.$eval(function(scope){
		scope.var1 = 100;
		scope.var2 = 200;
	});

	//with the angular expression form ($apply passes to $eval) -- you can edit props on scope directly without dot notation
	setTimeout(function(){$scope.$apply('var1=999;var2=9999');},1500)

	$scope.$watch('var1',function(){console.log($scope.var1)});
	$scope.$watch('var2',function(){console.log($scope.var2)});

	//var bb = gm();

	//console.log(bb);

	//$scope.data = a.data;
	//console.log(a.par("id"))
	//$scope.onlyVar = 1
	//.get("./Metros.json");
	//$scope.$watch(function(){return a.data},console.log("data change"));
	//console.log(b);
}])



//Helper service for collecting a list of metro areas
//If you want to receive a list of the closest metro areas, pass in the scopeOpbject
angular.module('services').factory('getMetros',[function(){
  var ls = function(top100,scopeObject){
    //default is to list just the top 100. a truthy arg is translated as top 100. a falsey arg will return all metros.
    var top100 = (typeof top100 == 'undefined') || top100 ? true : false;
    var haveScope = typeof scopeObject == 'undefined' ? false : true;

  	var metros = [ { "gcode": "M10180", "nm": "Abilene, TX", "shrtnm": "Abilene, TX", "city": "Abilene", "t100": 0, "lon": -99.718, "lat": 32.45 }, { "gcode": "M10420", "nm": "Akron, OH", "shrtnm": "Akron, OH", "city": "Akron", "t100": 1, "lon": -81.349, "lat": 41.149 }, { "gcode": "M10500", "nm": "Albany, GA", "shrtnm": "Albany, GA", "city": "Albany", "t100": 0, "lon": -84.174, "lat": 31.59 }, { "gcode": "M10580", "nm": "Albany-Schenectady-Troy, NY", "shrtnm": "Albany, NY", "city": "Albany", "t100": 1, "lon": -73.942, "lat": 42.789 }, { "gcode": "M10740", "nm": "Albuquerque, NM", "shrtnm": "Albuquerque, NM", "city": "Albuquerque", "t100": 1, "lon": -106.47, "lat": 35.122 }, { "gcode": "M10780", "nm": "Alexandria, LA", "shrtnm": "Alexandria, LA", "city": "Alexandria", "t100": 0, "lon": -92.542, "lat": 31.331 }, { "gcode": "M10900", "nm": "Allentown-Bethlehem-Easton, PA-NJ", "shrtnm": "Allentown, PA-NJ", "city": "Allentown", "t100": 1, "lon": -75.404, "lat": 40.789 }, { "gcode": "M11020", "nm": "Altoona, PA", "shrtnm": "Altoona, PA", "city": "Altoona", "t100": 0, "lon": -78.349, "lat": 40.481 }, { "gcode": "M11100", "nm": "Amarillo, TX", "shrtnm": "Amarillo, TX", "city": "Amarillo", "t100": 0, "lon": -101.63, "lat": 35.185 }, { "gcode": "M11180", "nm": "Ames, IA", "shrtnm": "Ames, IA", "city": "Ames", "t100": 0, "lon": -93.465, "lat": 42.036 }, { "gcode": "M11260", "nm": "Anchorage, AK", "shrtnm": "Anchorage, AK", "city": "Anchorage", "t100": 0, "lon": -149.54, "lat": 62.243 }, { "gcode": "M11300", "nm": "Anderson, IN", "shrtnm": "Anderson, IN", "city": "Anderson", "t100": 0, "lon": -85.719, "lat": 40.162 }, { "gcode": "M11340", "nm": "Anderson, SC", "shrtnm": "Anderson, SC", "city": "Anderson", "t100": 0, "lon": -82.638, "lat": 34.519 }, { "gcode": "M11460", "nm": "Ann Arbor, MI", "shrtnm": "Ann Arbor, MI", "city": "Ann Arbor", "t100": 0, "lon": -83.839, "lat": 42.253 }, { "gcode": "M11500", "nm": "Anniston-Oxford, AL", "shrtnm": "Anniston, AL", "city": "Anniston", "t100": 0, "lon": -85.826, "lat": 33.771 }, { "gcode": "M11540", "nm": "Appleton, WI", "shrtnm": "Appleton, WI", "city": "Appleton", "t100": 0, "lon": -88.371, "lat": 44.289 }, { "gcode": "M11700", "nm": "Asheville, NC", "shrtnm": "Asheville, NC", "city": "Asheville", "t100": 0, "lon": -82.683, "lat": 35.601 }, { "gcode": "M12020", "nm": "Athens-Clarke County, GA", "shrtnm": "Athens, GA", "city": "Athens", "t100": 0, "lon": -83.214, "lat": 33.949 }, { "gcode": "M12060", "nm": "Atlanta-Sandy Springs-Marietta, GA", "shrtnm": "Atlanta, GA", "city": "Atlanta", "t100": 1, "lon": -84.437, "lat": 33.697 }, { "gcode": "M12100", "nm": "Atlantic City-Hammonton, NJ", "shrtnm": "Atlantic City, NJ", "city": "Atlantic City", "t100": 0, "lon": -74.683, "lat": 39.483 }, { "gcode": "M12220", "nm": "Auburn-Opelika, AL", "shrtnm": "Auburn, AL", "city": "Auburn", "t100": 0, "lon": -85.355, "lat": 32.601 }, { "gcode": "M12260", "nm": "Augusta-Richmond County, GA-SC", "shrtnm": "Augusta, GA-SC", "city": "Augusta", "t100": 1, "lon": -81.947, "lat": 33.435 }, { "gcode": "M12420", "nm": "Austin-Round Rock-San Marcos, TX", "shrtnm": "Austin, TX", "city": "Austin", "t100": 1, "lon": -97.654, "lat": 30.263 }, { "gcode": "M12540", "nm": "Bakersfield-Delano, CA", "shrtnm": "Bakersfield, CA", "city": "Bakersfield", "t100": 1, "lon": -118.73, "lat": 35.343 }, { "gcode": "M12580", "nm": "Baltimore-Towson, MD", "shrtnm": "Baltimore, MD", "city": "Baltimore", "t100": 1, "lon": -76.586, "lat": 39.345 }, { "gcode": "M12620", "nm": "Bangor, ME", "shrtnm": "Bangor, ME", "city": "Bangor", "t100": 0, "lon": -68.649, "lat": 45.401 }, { "gcode": "M12700", "nm": "Barnstable Town, MA", "shrtnm": "Barnstable Town, MA", "city": "Barnstable Town", "t100": 0, "lon": -70.299, "lat": 41.726 }, { "gcode": "M12940", "nm": "Baton Rouge, LA", "shrtnm": "Baton Rouge, LA", "city": "Baton Rouge", "t100": 1, "lon": -91.131, "lat": 30.57 }, { "gcode": "M12980", "nm": "Battle Creek, MI", "shrtnm": "Battle Creek, MI", "city": "Battle Creek", "t100": 0, "lon": -85.006, "lat": 42.247 }, { "gcode": "M13020", "nm": "Bay City, MI", "shrtnm": "Bay City, MI", "city": "Bay City", "t100": 0, "lon": -83.992, "lat": 43.707 }, { "gcode": "M13140", "nm": "Beaumont-Port Arthur, TX", "shrtnm": "Beaumont, TX", "city": "Beaumont", "t100": 0, "lon": -94.208, "lat": 30.102 }, { "gcode": "M13380", "nm": "Bellingham, WA", "shrtnm": "Bellingham, WA", "city": "Bellingham", "t100": 0, "lon": -121.72, "lat": 48.826 }, { "gcode": "M13460", "nm": "Bend, OR", "shrtnm": "Bend, OR", "city": "Bend", "t100": 0, "lon": -121.23, "lat": 43.915 }, { "gcode": "M13740", "nm": "Billings, MT", "shrtnm": "Billings, MT", "city": "Billings", "t100": 0, "lon": -108.6, "lat": 45.629 }, { "gcode": "M13780", "nm": "Binghamton, NY", "shrtnm": "Binghamton, NY", "city": "Binghamton", "t100": 0, "lon": -76.025, "lat": 42.164 }, { "gcode": "M13820", "nm": "Birmingham-Hoover, AL", "shrtnm": "Birmingham, AL", "city": "Birmingham", "t100": 1, "lon": -86.814, "lat": 33.464 }, { "gcode": "M13900", "nm": "Bismarck, ND", "shrtnm": "Bismarck, ND", "city": "Bismarck", "t100": 0, "lon": -100.91, "lat": 46.837 }, { "gcode": "M13980", "nm": "Blacksburg-Christiansburg-Radford, VA", "shrtnm": "Blacksburg, VA", "city": "Blacksburg", "t100": 0, "lon": -80.592, "lat": 37.187 }, { "gcode": "M14020", "nm": "Bloomington, IN", "shrtnm": "Bloomington, IN", "city": "Bloomington", "t100": 0, "lon": -86.792, "lat": 39.154 }, { "gcode": "M14060", "nm": "Bloomington-Normal, IL", "shrtnm": "Bloomington, IL", "city": "Bloomington", "t100": 0, "lon": -88.847, "lat": 40.491 }, { "gcode": "M14260", "nm": "Boise City-Nampa, ID", "shrtnm": "Boise City, ID", "city": "Boise City", "t100": 1, "lon": -116.14, "lat": 43.016 }, { "gcode": "M14460", "nm": "Boston-Cambridge-Quincy, MA-NH", "shrtnm": "Boston, MA-NH", "city": "Boston", "t100": 1, "lon": -71.104, "lat": 42.558 }, { "gcode": "M14500", "nm": "Boulder, CO", "shrtnm": "Boulder, CO", "city": "Boulder", "t100": 0, "lon": -105.36, "lat": 40.092 }, { "gcode": "M14540", "nm": "Bowling Green, KY", "shrtnm": "Bowling Green, KY", "city": "Bowling Green", "t100": 0, "lon": -86.357, "lat": 37.071 }, { "gcode": "M14740", "nm": "Bremerton-Silverdale, WA", "shrtnm": "Bremerton, WA", "city": "Bremerton", "t100": 0, "lon": -122.68, "lat": 47.613 }, { "gcode": "M14860", "nm": "Bridgeport-Stamford-Norwalk, CT", "shrtnm": "Bridgeport, CT", "city": "Bridgeport", "t100": 1, "lon": -73.389, "lat": 41.273 }, { "gcode": "M15180", "nm": "Brownsville-Harlingen, TX", "shrtnm": "Brownsville, TX", "city": "Brownsville", "t100": 0, "lon": -97.533, "lat": 26.127 }, { "gcode": "M15260", "nm": "Brunswick, GA", "shrtnm": "Brunswick, GA", "city": "Brunswick", "t100": 0, "lon": -81.646, "lat": 31.312 }, { "gcode": "M15380", "nm": "Buffalo-Niagara Falls, NY", "shrtnm": "Buffalo, NY", "city": "Buffalo", "t100": 1, "lon": -78.735, "lat": 42.91 }, { "gcode": "M15500", "nm": "Burlington, NC", "shrtnm": "Burlington, NC", "city": "Burlington", "t100": 0, "lon": -79.399, "lat": 36.044 }, { "gcode": "M15540", "nm": "Burlington-South Burlington, VT", "shrtnm": "Burlington, VT", "city": "Burlington", "t100": 0, "lon": -73.031, "lat": 44.687 }, { "gcode": "M15940", "nm": "Canton-Massillon, OH", "shrtnm": "Canton, OH", "city": "Canton", "t100": 0, "lon": -81.254, "lat": 40.719 }, { "gcode": "M15980", "nm": "Cape Coral-Fort Myers, FL", "shrtnm": "Cape Coral, FL", "city": "Cape Coral", "t100": 1, "lon": -81.818, "lat": 26.579 }, { "gcode": "M16020", "nm": "Cape Girardeau-Jackson, MO-IL", "shrtnm": "Cape Girardeau, MO-IL", "city": "Cape Girardeau", "t100": 0, "lon": -89.77, "lat": 37.324 }, { "gcode": "M16180", "nm": "Carson City, NV", "shrtnm": "Carson City, NV", "city": "Carson City", "t100": 0, "lon": -119.75, "lat": 39.151 }, { "gcode": "M16220", "nm": "Casper, WY", "shrtnm": "Casper, WY", "city": "Casper", "t100": 0, "lon": -106.8, "lat": 42.962 }, { "gcode": "M16300", "nm": "Cedar Rapids, IA", "shrtnm": "Cedar Rapids, IA", "city": "Cedar Rapids", "t100": 0, "lon": -91.631, "lat": 42.091 }, { "gcode": "M16580", "nm": "Champaign-Urbana, IL", "shrtnm": "Champaign, IL", "city": "Champaign", "t100": 0, "lon": -88.295, "lat": 40.227 }, { "gcode": "M16700", "nm": "Charleston-North Charleston-Summerville, SC", "shrtnm": "Charleston, SC", "city": "Charleston", "t100": 1, "lon": -80.05, "lat": 33.044 }, { "gcode": "M16620", "nm": "Charleston, WV", "shrtnm": "Charleston, WV", "city": "Charleston", "t100": 0, "lon": -81.649, "lat": 38.288 }, { "gcode": "M16740", "nm": "Charlotte-Gastonia-Rock Hill, NC-SC", "shrtnm": "Charlotte, NC-SC", "city": "Charlotte", "t100": 1, "lon": -80.732, "lat": 35.11 }, { "gcode": "M16820", "nm": "Charlottesville, VA", "shrtnm": "Charlottesville, VA", "city": "Charlottesville", "t100": 0, "lon": -78.593, "lat": 37.95 }, { "gcode": "M16860", "nm": "Chattanooga, TN-GA", "shrtnm": "Chattanooga, TN-GA", "city": "Chattanooga", "t100": 1, "lon": -85.359, "lat": 35.052 }, { "gcode": "M16940", "nm": "Cheyenne, WY", "shrtnm": "Cheyenne, WY", "city": "Cheyenne", "t100": 0, "lon": -104.69, "lat": 41.307 }, { "gcode": "M16980", "nm": "Chicago-Joliet-Naperville, IL-IN-WI", "shrtnm": "Chicago, IL-IN-WI", "city": "Chicago", "t100": 1, "lon": -87.963, "lat": 41.703 }, { "gcode": "M17020", "nm": "Chico, CA", "shrtnm": "Chico, CA", "city": "Chico", "t100": 0, "lon": -121.6, "lat": 39.667 }, { "gcode": "M17140", "nm": "Cincinnati-Middletown, OH-KY-IN", "shrtnm": "Cincinnati, OH-KY-IN", "city": "Cincinnati", "t100": 1, "lon": -84.465, "lat": 39.081 }, { "gcode": "M17300", "nm": "Clarksville, TN-KY", "shrtnm": "Clarksville, TN-KY", "city": "Clarksville", "t100": 0, "lon": -87.623, "lat": 36.693 }, { "gcode": "M17460", "nm": "Cleveland-Elyria-Mentor, OH", "shrtnm": "Cleveland, OH", "city": "Cleveland", "t100": 1, "lon": -81.684, "lat": 41.375 }, { "gcode": "M17420", "nm": "Cleveland, TN", "shrtnm": "Cleveland, TN", "city": "Cleveland", "t100": 0, "lon": -84.667, "lat": 35.135 }, { "gcode": "M17660", "nm": "Coeur d'Alene, ID", "shrtnm": "Coeur d'Alene, ID", "city": "Coeur d'Alene", "t100": 0, "lon": -116.7, "lat": 47.675 }, { "gcode": "M17780", "nm": "College Station-Bryan, TX", "shrtnm": "College Station, TX", "city": "College Station", "t100": 0, "lon": -96.489, "lat": 30.756 }, { "gcode": "M17820", "nm": "Colorado Springs, CO", "shrtnm": "Colorado Springs, CO", "city": "Colorado Springs", "t100": 1, "lon": -104.66, "lat": 38.843 }, { "gcode": "M17860", "nm": "Columbia, MO", "shrtnm": "Columbia, MO", "city": "Columbia", "t100": 0, "lon": -92.466, "lat": 39.052 }, { "gcode": "M17900", "nm": "Columbia, SC", "shrtnm": "Columbia, SC", "city": "Columbia", "t100": 1, "lon": -81.042, "lat": 34.092 }, { "gcode": "M17980", "nm": "Columbus, GA-AL", "shrtnm": "Columbus, GA-AL", "city": "Columbus", "t100": 0, "lon": -84.909, "lat": 32.441 }, { "gcode": "M18020", "nm": "Columbus, IN", "shrtnm": "Columbus, IN", "city": "Columbus", "t100": 0, "lon": -85.898, "lat": 39.206 }, { "gcode": "M18140", "nm": "Columbus, OH", "shrtnm": "Columbus, OH", "city": "Columbus", "t100": 1, "lon": -82.936, "lat": 40.041 }, { "gcode": "M18580", "nm": "Corpus Christi, TX", "shrtnm": "Corpus Christi, TX", "city": "Corpus Christi", "t100": 0, "lon": -97.5, "lat": 27.893 }, { "gcode": "M18700", "nm": "Corvallis, OR", "shrtnm": "Corvallis, OR", "city": "Corvallis", "t100": 0, "lon": -123.43, "lat": 44.492 }, { "gcode": "M18880", "nm": "Crestview-Fort Walton Beach-Destin, FL", "shrtnm": "Crestview, FL", "city": "Crestview", "t100": 0, "lon": -86.596, "lat": 30.707 }, { "gcode": "M19060", "nm": "Cumberland, MD-WV", "shrtnm": "Cumberland, MD-WV", "city": "Cumberland", "t100": 0, "lon": -78.805, "lat": 39.532 }, { "gcode": "M19100", "nm": "Dallas-Fort Worth-Arlington, TX", "shrtnm": "Dallas, TX", "city": "Dallas", "t100": 1, "lon": -96.931, "lat": 32.866 }, { "gcode": "M19140", "nm": "Dalton, GA", "shrtnm": "Dalton, GA", "city": "Dalton", "t100": 0, "lon": -84.848, "lat": 34.796 }, { "gcode": "M19180", "nm": "Danville, IL", "shrtnm": "Danville, IL", "city": "Danville", "t100": 0, "lon": -87.733, "lat": 40.183 }, { "gcode": "M19260", "nm": "Danville, VA", "shrtnm": "Danville, VA", "city": "Danville", "t100": 0, "lon": -79.398, "lat": 36.811 }, { "gcode": "M19340", "nm": "Davenport-Moline-Rock Island, IA-IL", "shrtnm": "Davenport, IA-IL", "city": "Davenport", "t100": 0, "lon": -90.466, "lat": 41.397 }, { "gcode": "M19380", "nm": "Dayton, OH", "shrtnm": "Dayton, OH", "city": "Dayton", "t100": 1, "lon": -84.268, "lat": 39.808 }, { "gcode": "M19460", "nm": "Decatur, AL", "shrtnm": "Decatur, AL", "city": "Decatur", "t100": 0, "lon": -87.103, "lat": 34.491 }, { "gcode": "M19500", "nm": "Decatur, IL", "shrtnm": "Decatur, IL", "city": "Decatur", "t100": 0, "lon": -88.962, "lat": 39.86 }, { "gcode": "M19660", "nm": "Deltona-Daytona Beach-Ormond Beach, FL", "shrtnm": "Deltona, FL", "city": "Deltona", "t100": 0, "lon": -81.196, "lat": 29.061 }, { "gcode": "M19740", "nm": "Denver-Aurora-Broomfield, CO", "shrtnm": "Denver, CO", "city": "Denver", "t100": 1, "lon": -104.89, "lat": 39.434 }, { "gcode": "M19780", "nm": "Des Moines-West Des Moines, IA", "shrtnm": "Des Moines, IA", "city": "Des Moines", "t100": 1, "lon": -93.94, "lat": 41.548 }, { "gcode": "M19820", "nm": "Detroit-Warren-Livonia, MI", "shrtnm": "Detroit, MI", "city": "Detroit", "t100": 1, "lon": -83.237, "lat": 42.722 }, { "gcode": "M20020", "nm": "Dothan, AL", "shrtnm": "Dothan, AL", "city": "Dothan", "t100": 0, "lon": -85.462, "lat": 31.253 }, { "gcode": "M20100", "nm": "Dover, DE", "shrtnm": "Dover, DE", "city": "Dover", "t100": 0, "lon": -75.568, "lat": 39.086 }, { "gcode": "M20220", "nm": "Dubuque, IA", "shrtnm": "Dubuque, IA", "city": "Dubuque", "t100": 0, "lon": -90.882, "lat": 42.469 }, { "gcode": "M20260", "nm": "Duluth, MN-WI", "shrtnm": "Duluth, MN-WI", "city": "Duluth", "t100": 0, "lon": -92.409, "lat": 47.334 }, { "gcode": "M20500", "nm": "Durham-Chapel Hill, NC", "shrtnm": "Durham, NC", "city": "Durham", "t100": 0, "lon": -79.1, "lat": 35.991 }, { "gcode": "M20740", "nm": "Eau Claire, WI", "shrtnm": "Eau Claire, WI", "city": "Eau Claire", "t100": 0, "lon": -91.282, "lat": 44.939 }, { "gcode": "M20940", "nm": "El Centro, CA", "shrtnm": "El Centro, CA", "city": "El Centro", "t100": 0, "lon": -115.37, "lat": 33.04 }, { "gcode": "M21060", "nm": "Elizabethtown, KY", "shrtnm": "Elizabethtown, KY", "city": "Elizabethtown", "t100": 0, "lon": -85.885, "lat": 37.653 }, { "gcode": "M21140", "nm": "Elkhart-Goshen, IN", "shrtnm": "Elkhart, IN", "city": "Elkhart", "t100": 0, "lon": -85.859, "lat": 41.597 }, { "gcode": "M21300", "nm": "Elmira, NY", "shrtnm": "Elmira, NY", "city": "Elmira", "t100": 0, "lon": -76.76, "lat": 42.141 }, { "gcode": "M21340", "nm": "El Paso, TX", "shrtnm": "El Paso, TX", "city": "El Paso", "t100": 1, "lon": -106.23, "lat": 31.769 }, { "gcode": "M21500", "nm": "Erie, PA", "shrtnm": "Erie, PA", "city": "Erie", "t100": 0, "lon": -80.032, "lat": 41.992 }, { "gcode": "M21660", "nm": "Eugene-Springfield, OR", "shrtnm": "Eugene, OR", "city": "Eugene", "t100": 0, "lon": -122.85, "lat": 43.939 }, { "gcode": "M21780", "nm": "Evansville, IN-KY", "shrtnm": "Evansville, IN-KY", "city": "Evansville", "t100": 0, "lon": -87.595, "lat": 37.98 }, { "gcode": "M21820", "nm": "Fairbanks, AK", "shrtnm": "Fairbanks, AK", "city": "Fairbanks", "t100": 0, "lon": -146.56, "lat": 64.808 }, { "gcode": "M22020", "nm": "Fargo, ND-MN", "shrtnm": "Fargo, ND-MN", "city": "Fargo", "t100": 0, "lon": -96.966, "lat": 46.918 }, { "gcode": "M22140", "nm": "Farmington, NM", "shrtnm": "Farmington, NM", "city": "Farmington", "t100": 0, "lon": -108.32, "lat": 36.508 }, { "gcode": "M22180", "nm": "Fayetteville, NC", "shrtnm": "Fayetteville, NC", "city": "Fayetteville", "t100": 0, "lon": -78.98, "lat": 35.037 }, { "gcode": "M22220", "nm": "Fayetteville-Springdale-Rogers, AR-MO", "shrtnm": "Fayetteville, AR-MO", "city": "Fayetteville", "t100": 0, "lon": -94.122, "lat": 36.196 }, { "gcode": "M22380", "nm": "Flagstaff, AZ", "shrtnm": "Flagstaff, AZ", "city": "Flagstaff", "t100": 0, "lon": -111.77, "lat": 35.839 }, { "gcode": "M22420", "nm": "Flint, MI", "shrtnm": "Flint, MI", "city": "Flint", "t100": 0, "lon": -83.707, "lat": 43.022 }, { "gcode": "M22520", "nm": "Florence-Muscle Shoals, AL", "shrtnm": "Florence, AL", "city": "Florence", "t100": 0, "lon": -87.724, "lat": 34.808 }, { "gcode": "M22500", "nm": "Florence, SC", "shrtnm": "Florence, SC", "city": "Florence", "t100": 0, "lon": -79.808, "lat": 34.152 }, { "gcode": "M22540", "nm": "Fond du Lac, WI", "shrtnm": "Fond du Lac, WI", "city": "Fond du Lac", "t100": 0, "lon": -88.488, "lat": 43.754 }, { "gcode": "M22660", "nm": "Fort Collins-Loveland, CO", "shrtnm": "Fort Collins, CO", "city": "Fort Collins", "t100": 0, "lon": -105.46, "lat": 40.666 }, { "gcode": "M22900", "nm": "Fort Smith, AR-OK", "shrtnm": "Fort Smith, AR-OK", "city": "Fort Smith", "t100": 0, "lon": -94.463, "lat": 35.239 }, { "gcode": "M23060", "nm": "Fort Wayne, IN", "shrtnm": "Fort Wayne, IN", "city": "Fort Wayne", "t100": 0, "lon": -85.217, "lat": 41.005 }, { "gcode": "M23420", "nm": "Fresno, CA", "shrtnm": "Fresno, CA", "city": "Fresno", "t100": 1, "lon": -119.65, "lat": 36.758 }, { "gcode": "M23460", "nm": "Gadsden, AL", "shrtnm": "Gadsden, AL", "city": "Gadsden", "t100": 0, "lon": -86.035, "lat": 34.045 }, { "gcode": "M23540", "nm": "Gainesville, FL", "shrtnm": "Gainesville, FL", "city": "Gainesville", "t100": 0, "lon": -82.476, "lat": 29.689 }, { "gcode": "M23580", "nm": "Gainesville, GA", "shrtnm": "Gainesville, GA", "city": "Gainesville", "t100": 0, "lon": -83.82, "lat": 34.317 }, { "gcode": "M24020", "nm": "Glens Falls, NY", "shrtnm": "Glens Falls, NY", "city": "Glens Falls", "t100": 0, "lon": -73.649, "lat": 43.444 }, { "gcode": "M24140", "nm": "Goldsboro, NC", "shrtnm": "Goldsboro, NC", "city": "Goldsboro", "t100": 0, "lon": -78.004, "lat": 35.364 }, { "gcode": "M24220", "nm": "Grand Forks, ND-MN", "shrtnm": "Grand Forks, ND-MN", "city": "Grand Forks", "t100": 0, "lon": -96.845, "lat": 47.836 }, { "gcode": "M24300", "nm": "Grand Junction, CO", "shrtnm": "Grand Junction, CO", "city": "Grand Junction", "t100": 0, "lon": -108.47, "lat": 39.018 }, { "gcode": "M24340", "nm": "Grand Rapids-Wyoming, MI", "shrtnm": "Grand Rapids, MI", "city": "Grand Rapids", "t100": 1, "lon": -85.482, "lat": 43.085 }, { "gcode": "M24500", "nm": "Great Falls, MT", "shrtnm": "Great Falls, MT", "city": "Great Falls", "t100": 0, "lon": -111.35, "lat": 47.308 }, { "gcode": "M24540", "nm": "Greeley, CO", "shrtnm": "Greeley, CO", "city": "Greeley", "t100": 0, "lon": -104.39, "lat": 40.555 }, { "gcode": "M24580", "nm": "Green Bay, WI", "shrtnm": "Green Bay, WI", "city": "Green Bay", "t100": 0, "lon": -88.077, "lat": 44.773 }, { "gcode": "M24660", "nm": "Greensboro-High Point, NC", "shrtnm": "Greensboro, NC", "city": "Greensboro", "t100": 1, "lon": -79.792, "lat": 36.026 }, { "gcode": "M24860", "nm": "Greenville-Mauldin-Easley, SC", "shrtnm": "Greenville, SC", "city": "Greenville", "t100": 1, "lon": -82.331, "lat": 34.747 }, { "gcode": "M24780", "nm": "Greenville, NC", "shrtnm": "Greenville, NC", "city": "Greenville", "t100": 0, "lon": -77.461, "lat": 35.562 }, { "gcode": "M25060", "nm": "Gulfport-Biloxi, MS", "shrtnm": "Gulfport, MS", "city": "Gulfport", "t100": 0, "lon": -89.236, "lat": 30.565 }, { "gcode": "M25180", "nm": "Hagerstown-Martinsburg, MD-WV", "shrtnm": "Hagerstown, MD-WV", "city": "Hagerstown", "t100": 0, "lon": -77.981, "lat": 39.55 }, { "gcode": "M25260", "nm": "Hanford-Corcoran, CA", "shrtnm": "Hanford, CA", "city": "Hanford", "t100": 0, "lon": -119.82, "lat": 36.075 }, { "gcode": "M25420", "nm": "Harrisburg-Carlisle, PA", "shrtnm": "Harrisburg, PA", "city": "Harrisburg", "t100": 1, "lon": -77.101, "lat": 40.327 }, { "gcode": "M25500", "nm": "Harrisonburg, VA", "shrtnm": "Harrisonburg, VA", "city": "Harrisonburg", "t100": 0, "lon": -78.876, "lat": 38.511 }, { "gcode": "M25540", "nm": "Hartford-West Hartford-East Hartford, CT", "shrtnm": "Hartford, CT", "city": "Hartford", "t100": 1, "lon": -72.577, "lat": 41.735 }, { "gcode": "M25620", "nm": "Hattiesburg, MS", "shrtnm": "Hattiesburg, MS", "city": "Hattiesburg", "t100": 0, "lon": -89.229, "lat": 31.187 }, { "gcode": "M25860", "nm": "Hickory-Lenoir-Morganton, NC", "shrtnm": "Hickory, NC", "city": "Hickory", "t100": 0, "lon": -81.455, "lat": 35.813 }, { "gcode": "M25980", "nm": "Hinesville-Fort Stewart, GA", "shrtnm": "Hinesville, GA", "city": "Hinesville", "t100": 0, "lon": -81.604, "lat": 31.796 }, { "gcode": "M26100", "nm": "Holland-Grand Haven, MI", "shrtnm": "Holland, MI", "city": "Holland", "t100": 0, "lon": -85.996, "lat": 42.96 }, { "gcode": "M26180", "nm": "Honolulu, HI", "shrtnm": "Honolulu, HI", "city": "Honolulu", "t100": 1, "lon": -157.97, "lat": 21.459 }, { "gcode": "M26300", "nm": "Hot Springs, AR", "shrtnm": "Hot Springs, AR", "city": "Hot Springs", "t100": 0, "lon": -93.15, "lat": 34.577 }, { "gcode": "M26380", "nm": "Houma-Bayou Cane-Thibodaux, LA", "shrtnm": "Houma, LA", "city": "Houma", "t100": 0, "lon": -90.679, "lat": 29.487 }, { "gcode": "M26420", "nm": "Houston-Sugar Land-Baytown, TX", "shrtnm": "Houston, TX", "city": "Houston", "t100": 1, "lon": -95.386, "lat": 29.844 }, { "gcode": "M26580", "nm": "Huntington-Ashland, WV-KY-OH", "shrtnm": "Huntington, WV-KY-OH", "city": "Huntington", "t100": 0, "lon": -82.548, "lat": 38.407 }, { "gcode": "M26620", "nm": "Huntsville, AL", "shrtnm": "Huntsville, AL", "city": "Huntsville", "t100": 0, "lon": -86.735, "lat": 34.783 }, { "gcode": "M26820", "nm": "Idaho Falls, ID", "shrtnm": "Idaho Falls, ID", "city": "Idaho Falls", "t100": 0, "lon": -111.87, "lat": 43.547 }, { "gcode": "M26900", "nm": "Indianapolis-Carmel, IN", "shrtnm": "Indianapolis, IN", "city": "Indianapolis", "t100": 1, "lon": -86.263, "lat": 39.699 }, { "gcode": "M26980", "nm": "Iowa City, IA", "shrtnm": "Iowa City, IA", "city": "Iowa City", "t100": 0, "lon": -91.65, "lat": 41.511 }, { "gcode": "M27060", "nm": "Ithaca, NY", "shrtnm": "Ithaca, NY", "city": "Ithaca", "t100": 0, "lon": -76.474, "lat": 42.452 }, { "gcode": "M27100", "nm": "Jackson, MI", "shrtnm": "Jackson, MI", "city": "Jackson", "t100": 0, "lon": -84.423, "lat": 42.248 }, { "gcode": "M27140", "nm": "Jackson, MS", "shrtnm": "Jackson, MS", "city": "Jackson", "t100": 1, "lon": -90.177, "lat": 32.202 }, { "gcode": "M27180", "nm": "Jackson, TN", "shrtnm": "Jackson, TN", "city": "Jackson", "t100": 0, "lon": -88.762, "lat": 35.545 }, { "gcode": "M27260", "nm": "Jacksonville, FL", "shrtnm": "Jacksonville, FL", "city": "Jacksonville", "t100": 1, "lon": -81.794, "lat": 30.238 }, { "gcode": "M27340", "nm": "Jacksonville, NC", "shrtnm": "Jacksonville, NC", "city": "Jacksonville", "t100": 0, "lon": -77.436, "lat": 34.738 }, { "gcode": "M27500", "nm": "Janesville, WI", "shrtnm": "Janesville, WI", "city": "Janesville", "t100": 0, "lon": -89.072, "lat": 42.671 }, { "gcode": "M27620", "nm": "Jefferson City, MO", "shrtnm": "Jefferson City, MO", "city": "Jefferson City", "t100": 0, "lon": -92.092, "lat": 38.64 }, { "gcode": "M27740", "nm": "Johnson City, TN", "shrtnm": "Johnson City, TN", "city": "Johnson City", "t100": 0, "lon": -82.334, "lat": 36.254 }, { "gcode": "M27780", "nm": "Johnstown, PA", "shrtnm": "Johnstown, PA", "city": "Johnstown", "t100": 0, "lon": -78.714, "lat": 40.495 }, { "gcode": "M27860", "nm": "Jonesboro, AR", "shrtnm": "Jonesboro, AR", "city": "Jonesboro", "t100": 0, "lon": -90.648, "lat": 35.698 }, { "gcode": "M27900", "nm": "Joplin, MO", "shrtnm": "Joplin, MO", "city": "Joplin", "t100": 0, "lon": -94.34, "lat": 37.057 }, { "gcode": "M28020", "nm": "Kalamazoo-Portage, MI", "shrtnm": "Kalamazoo, MI", "city": "Kalamazoo", "t100": 0, "lon": -85.784, "lat": 42.248 }, { "gcode": "M28100", "nm": "Kankakee-Bradley, IL", "shrtnm": "Kankakee, IL", "city": "Kankakee", "t100": 0, "lon": -87.862, "lat": 41.138 }, { "gcode": "M28140", "nm": "Kansas City, MO-KS", "shrtnm": "Kansas City, MO-KS", "city": "Kansas City", "t100": 1, "lon": -94.505, "lat": 38.91 }, { "gcode": "M28420", "nm": "Kennewick-Pasco-Richland, WA", "shrtnm": "Kennewick, WA", "city": "Kennewick", "t100": 0, "lon": -119.25, "lat": 46.363 }, { "gcode": "M28660", "nm": "Killeen-Temple-Fort Hood, TX", "shrtnm": "Killeen, TX", "city": "Killeen", "t100": 0, "lon": -97.788, "lat": 31.208 }, { "gcode": "M28700", "nm": "Kingsport-Bristol-Bristol, TN-VA", "shrtnm": "Kingsport, TN-VA", "city": "Kingsport", "t100": 0, "lon": -82.443, "lat": 36.608 }, { "gcode": "M28740", "nm": "Kingston, NY", "shrtnm": "Kingston, NY", "city": "Kingston", "t100": 0, "lon": -74.258, "lat": 41.888 }, { "gcode": "M28940", "nm": "Knoxville, TN", "shrtnm": "Knoxville, TN", "city": "Knoxville", "t100": 1, "lon": -84.016, "lat": 35.931 }, { "gcode": "M29020", "nm": "Kokomo, IN", "shrtnm": "Kokomo, IN", "city": "Kokomo", "t100": 0, "lon": -86.086, "lat": 40.403 }, { "gcode": "M29100", "nm": "La Crosse, WI-MN", "shrtnm": "La Crosse, WI-MN", "city": "La Crosse", "t100": 0, "lon": -91.32, "lat": 43.779 }, { "gcode": "M29140", "nm": "Lafayette, IN", "shrtnm": "Lafayette, IN", "city": "Lafayette", "t100": 0, "lon": -86.93, "lat": 40.514 }, { "gcode": "M29180", "nm": "Lafayette, LA", "shrtnm": "Lafayette, LA", "city": "Lafayette", "t100": 0, "lon": -91.722, "lat": 30.148 }, { "gcode": "M29340", "nm": "Lake Charles, LA", "shrtnm": "Lake Charles, LA", "city": "Lake Charles", "t100": 0, "lon": -93.259, "lat": 30.017 }, { "gcode": "M29420", "nm": "Lake Havasu City-Kingman, AZ", "shrtnm": "Lake Havasu City, AZ", "city": "Lake Havasu City", "t100": 0, "lon": -113.76, "lat": 35.704 }, { "gcode": "M29460", "nm": "Lakeland-Winter Haven, FL", "shrtnm": "Lakeland, FL", "city": "Lakeland", "t100": 1, "lon": -81.698, "lat": 27.949 }, { "gcode": "M29540", "nm": "Lancaster, PA", "shrtnm": "Lancaster, PA", "city": "Lancaster", "t100": 1, "lon": -76.248, "lat": 40.042 }, { "gcode": "M29620", "nm": "Lansing-East Lansing, MI", "shrtnm": "Lansing, MI", "city": "Lansing", "t100": 0, "lon": -84.607, "lat": 42.713 }, { "gcode": "M29700", "nm": "Laredo, TX", "shrtnm": "Laredo, TX", "city": "Laredo", "t100": 0, "lon": -99.332, "lat": 27.761 }, { "gcode": "M29740", "nm": "Las Cruces, NM", "shrtnm": "Las Cruces, NM", "city": "Las Cruces", "t100": 0, "lon": -106.83, "lat": 32.353 }, { "gcode": "M29820", "nm": "Las Vegas-Paradise, NV", "shrtnm": "Las Vegas, NV", "city": "Las Vegas", "t100": 1, "lon": -115.02, "lat": 36.215 }, { "gcode": "M29940", "nm": "Lawrence, KS", "shrtnm": "Lawrence, KS", "city": "Lawrence", "t100": 0, "lon": -95.293, "lat": 38.885 }, { "gcode": "M30020", "nm": "Lawton, OK", "shrtnm": "Lawton, OK", "city": "Lawton", "t100": 0, "lon": -98.472, "lat": 34.662 }, { "gcode": "M30140", "nm": "Lebanon, PA", "shrtnm": "Lebanon, PA", "city": "Lebanon", "t100": 0, "lon": -76.458, "lat": 40.367 }, { "gcode": "M30340", "nm": "Lewiston-Auburn, ME", "shrtnm": "Lewiston, ME", "city": "Lewiston", "t100": 0, "lon": -70.206, "lat": 44.166 }, { "gcode": "M30300", "nm": "Lewiston, ID-WA", "shrtnm": "Lewiston, ID-WA", "city": "Lewiston", "t100": 0, "lon": -116.94, "lat": 46.269 }, { "gcode": "M30460", "nm": "Lexington-Fayette, KY", "shrtnm": "Lexington, KY", "city": "Lexington", "t100": 0, "lon": -84.433, "lat": 38.09 }, { "gcode": "M30620", "nm": "Lima, OH", "shrtnm": "Lima, OH", "city": "Lima", "t100": 0, "lon": -84.106, "lat": 40.772 }, { "gcode": "M30700", "nm": "Lincoln, NE", "shrtnm": "Lincoln, NE", "city": "Lincoln", "t100": 0, "lon": -96.871, "lat": 40.82 }, { "gcode": "M30780", "nm": "Little Rock-North Little Rock-Conway, AR", "shrtnm": "Little Rock, AR", "city": "Little Rock", "t100": 1, "lon": -92.397, "lat": 34.757 }, { "gcode": "M30860", "nm": "Logan, UT-ID", "shrtnm": "Logan, UT-ID", "city": "Logan", "t100": 0, "lon": -111.77, "lat": 41.89 }, { "gcode": "M30980", "nm": "Longview, TX", "shrtnm": "Longview, TX", "city": "Longview", "t100": 0, "lon": -94.829, "lat": 32.372 }, { "gcode": "M31020", "nm": "Longview, WA", "shrtnm": "Longview, WA", "city": "Longview", "t100": 0, "lon": -122.68, "lat": 46.193 }, { "gcode": "M31100", "nm": "Los Angeles-Long Beach-Santa Ana, CA", "shrtnm": "Los Angeles, CA", "city": "Los Angeles", "t100": 1, "lon": -118.15, "lat": 34.222 }, { "gcode": "M31140", "nm": "Louisville/Jefferson County, KY-IN", "shrtnm": "Louisville, KY-IN", "city": "Louisville", "t100": 1, "lon": -85.689, "lat": 38.239 }, { "gcode": "M31180", "nm": "Lubbock, TX", "shrtnm": "Lubbock, TX", "city": "Lubbock", "t100": 0, "lon": -101.56, "lat": 33.612 }, { "gcode": "M31340", "nm": "Lynchburg, VA", "shrtnm": "Lynchburg, VA", "city": "Lynchburg", "t100": 0, "lon": -79.22, "lat": 37.365 }, { "gcode": "M31420", "nm": "Macon, GA", "shrtnm": "Macon, GA", "city": "Macon", "t100": 0, "lon": -83.715, "lat": 32.858 }, { "gcode": "M31460", "nm": "Madera-Chowchilla, CA", "shrtnm": "Madera, CA", "city": "Madera", "t100": 0, "lon": -119.76, "lat": 37.218 }, { "gcode": "M31540", "nm": "Madison, WI", "shrtnm": "Madison, WI", "city": "Madison", "t100": 1, "lon": -89.59, "lat": 43.163 }, { "gcode": "M31700", "nm": "Manchester-Nashua, NH", "shrtnm": "Manchester, NH", "city": "Manchester", "t100": 0, "lon": -71.716, "lat": 42.915 }, { "gcode": "M31740", "nm": "Manhattan, KS", "shrtnm": "Manhattan, KS", "city": "Manhattan", "t100": 0, "lon": -96.559, "lat": 39.271 }, { "gcode": "M31860", "nm": "Mankato-North Mankato, MN", "shrtnm": "Mankato, MN", "city": "Mankato", "t100": 0, "lon": -94.136, "lat": 44.154 }, { "gcode": "M31900", "nm": "Mansfield, OH", "shrtnm": "Mansfield, OH", "city": "Mansfield", "t100": 0, "lon": -82.536, "lat": 40.775 }, { "gcode": "M32580", "nm": "McAllen-Edinburg-Mission, TX", "shrtnm": "McAllen, TX", "city": "McAllen", "t100": 1, "lon": -98.181, "lat": 26.397 }, { "gcode": "M32780", "nm": "Medford, OR", "shrtnm": "Medford, OR", "city": "Medford", "t100": 0, "lon": -122.73, "lat": 42.432 }, { "gcode": "M32820", "nm": "Memphis, TN-MS-AR", "shrtnm": "Memphis, TN-MS-AR", "city": "Memphis", "t100": 1, "lon": -89.87, "lat": 35.024 }, { "gcode": "M32900", "nm": "Merced, CA", "shrtnm": "Merced, CA", "city": "Merced", "t100": 0, "lon": -120.72, "lat": 37.192 }, { "gcode": "M33100", "nm": "Miami-Fort Lauderdale-Pompano Beach, FL", "shrtnm": "Miami, FL", "city": "Miami", "t100": 1, "lon": -80.509, "lat": 26.159 }, { "gcode": "M33140", "nm": "Michigan City-La Porte, IN", "shrtnm": "Michigan City, IN", "city": "Michigan City", "t100": 0, "lon": -86.74, "lat": 41.546 }, { "gcode": "M33260", "nm": "Midland, TX", "shrtnm": "Midland, TX", "city": "Midland", "t100": 0, "lon": -102.03, "lat": 31.869 }, { "gcode": "M33340", "nm": "Milwaukee-Waukesha-West Allis, WI", "shrtnm": "Milwaukee, WI", "city": "Milwaukee", "t100": 1, "lon": -88.172, "lat": 43.177 }, { "gcode": "M33460", "nm": "Minneapolis-St. Paul-Bloomington, MN-WI", "shrtnm": "Minneapolis, MN-WI", "city": "Minneapolis", "t100": 1, "lon": -93.203, "lat": 45.067 }, { "gcode": "M33540", "nm": "Missoula, MT", "shrtnm": "Missoula, MT", "city": "Missoula", "t100": 0, "lon": -113.92, "lat": 47.036 }, { "gcode": "M33660", "nm": "Mobile, AL", "shrtnm": "Mobile, AL", "city": "Mobile", "t100": 0, "lon": -88.206, "lat": 30.79 }, { "gcode": "M33700", "nm": "Modesto, CA", "shrtnm": "Modesto, CA", "city": "Modesto", "t100": 1, "lon": -121, "lat": 37.559 }, { "gcode": "M33740", "nm": "Monroe, LA", "shrtnm": "Monroe, LA", "city": "Monroe", "t100": 0, "lon": -92.284, "lat": 32.687 }, { "gcode": "M33780", "nm": "Monroe, MI", "shrtnm": "Monroe, MI", "city": "Monroe", "t100": 0, "lon": -83.541, "lat": 41.93 }, { "gcode": "M33860", "nm": "Montgomery, AL", "shrtnm": "Montgomery, AL", "city": "Montgomery", "t100": 0, "lon": -86.403, "lat": 32.361 }, { "gcode": "M34060", "nm": "Morgantown, WV", "shrtnm": "Morgantown, WV", "city": "Morgantown", "t100": 0, "lon": -79.804, "lat": 39.527 }, { "gcode": "M34100", "nm": "Morristown, TN", "shrtnm": "Morristown, TN", "city": "Morristown", "t100": 0, "lon": -83.431, "lat": 36.174 }, { "gcode": "M34580", "nm": "Mount Vernon-Anacortes, WA", "shrtnm": "Mount Vernon, WA", "city": "Mount Vernon", "t100": 0, "lon": -121.73, "lat": 48.479 }, { "gcode": "M34620", "nm": "Muncie, IN", "shrtnm": "Muncie, IN", "city": "Muncie", "t100": 0, "lon": -85.397, "lat": 40.228 }, { "gcode": "M34740", "nm": "Muskegon-Norton Shores, MI", "shrtnm": "Muskegon, MI", "city": "Muskegon", "t100": 0, "lon": -86.152, "lat": 43.291 }, { "gcode": "M34820", "nm": "Myrtle Beach-North Myrtle Beach-Conway, SC", "shrtnm": "Myrtle Beach, SC", "city": "Myrtle Beach", "t100": 0, "lon": -78.997, "lat": 33.922 }, { "gcode": "M34900", "nm": "Napa, CA", "shrtnm": "Napa, CA", "city": "Napa", "t100": 0, "lon": -122.33, "lat": 38.506 }, { "gcode": "M34940", "nm": "Naples-Marco Island, FL", "shrtnm": "Naples, FL", "city": "Naples", "t100": 0, "lon": -81.34, "lat": 26.119 }, { "gcode": "M34980", "nm": "Nashville-Davidson--Murfreesboro--Franklin, TN", "shrtnm": "Nashville-Davidson, TN", "city": "Nashville-Davidson", "t100": 1, "lon": -86.687, "lat": 36.139 }, { "gcode": "M35300", "nm": "New Haven-Milford, CT", "shrtnm": "New Haven, CT", "city": "New Haven", "t100": 1, "lon": -72.932, "lat": 41.411 }, { "gcode": "M35380", "nm": "New Orleans-Metairie-Kenner, LA", "shrtnm": "New Orleans, LA", "city": "New Orleans", "t100": 1, "lon": -89.948, "lat": 29.95 }, { "gcode": "M35620", "nm": "New York-Northern New Jersey-Long Island, NY-NJ-PA", "shrtnm": "New York, NY-NJ-PA", "city": "New York", "t100": 1, "lon": -74.146, "lat": 40.786 }, { "gcode": "M35660", "nm": "Niles-Benton Harbor, MI", "shrtnm": "Niles, MI", "city": "Niles", "t100": 0, "lon": -86.412, "lat": 41.955 }, { "gcode": "M35840", "nm": "North Port-Bradenton-Sarasota, FL", "shrtnm": "North Port, FL", "city": "North Port", "t100": 1, "lon": -82.311, "lat": 27.346 }, { "gcode": "M35980", "nm": "Norwich-New London, CT", "shrtnm": "Norwich, CT", "city": "Norwich", "t100": 0, "lon": -72.102, "lat": 41.488 }, { "gcode": "M36100", "nm": "Ocala, FL", "shrtnm": "Ocala, FL", "city": "Ocala", "t100": 0, "lon": -82.057, "lat": 29.21 }, { "gcode": "M36140", "nm": "Ocean City, NJ", "shrtnm": "Ocean City, NJ", "city": "Ocean City", "t100": 0, "lon": -74.809, "lat": 39.153 }, { "gcode": "M36220", "nm": "Odessa, TX", "shrtnm": "Odessa, TX", "city": "Odessa", "t100": 0, "lon": -102.54, "lat": 31.869 }, { "gcode": "M36260", "nm": "Ogden-Clearfield, UT", "shrtnm": "Ogden, UT", "city": "Ogden", "t100": 1, "lon": -111.87, "lat": 41.119 }, { "gcode": "M36420", "nm": "Oklahoma City, OK", "shrtnm": "Oklahoma City, OK", "city": "Oklahoma City", "t100": 1, "lon": -97.504, "lat": 35.43 }, { "gcode": "M36500", "nm": "Olympia, WA", "shrtnm": "Olympia, WA", "city": "Olympia", "t100": 0, "lon": -122.83, "lat": 46.92 }, { "gcode": "M36540", "nm": "Omaha-Council Bluffs, NE-IA", "shrtnm": "Omaha, NE-IA", "city": "Omaha", "t100": 1, "lon": -95.999, "lat": 41.29 }, { "gcode": "M36740", "nm": "Orlando-Kissimmee-Sanford, FL", "shrtnm": "Orlando, FL", "city": "Orlando", "t100": 1, "lon": -81.363, "lat": 28.434 }, { "gcode": "M36780", "nm": "Oshkosh-Neenah, WI", "shrtnm": "Oshkosh, WI", "city": "Oshkosh", "t100": 0, "lon": -88.645, "lat": 44.069 }, { "gcode": "M36980", "nm": "Owensboro, KY", "shrtnm": "Owensboro, KY", "city": "Owensboro", "t100": 0, "lon": -87.069, "lat": 37.7 }, { "gcode": "M37100", "nm": "Oxnard-Thousand Oaks-Ventura, CA", "shrtnm": "Oxnard, CA", "city": "Oxnard", "t100": 1, "lon": -119.08, "lat": 34.457 }, { "gcode": "M37340", "nm": "Palm Bay-Melbourne-Titusville, FL", "shrtnm": "Palm Bay, FL", "city": "Palm Bay", "t100": 1, "lon": -80.744, "lat": 28.264 }, { "gcode": "M37380", "nm": "Palm Coast, FL", "shrtnm": "Palm Coast, FL", "city": "Palm Coast", "t100": 0, "lon": -81.314, "lat": 29.461 }, { "gcode": "M37460", "nm": "Panama City-Lynn Haven-Panama City Beach, FL", "shrtnm": "Panama City, FL", "city": "Panama City", "t100": 0, "lon": -85.615, "lat": 30.28 }, { "gcode": "M37620", "nm": "Parkersburg-Marietta-Vienna, WV-OH", "shrtnm": "Parkersburg, WV-OH", "city": "Parkersburg", "t100": 0, "lon": -81.448, "lat": 39.308 }, { "gcode": "M37700", "nm": "Pascagoula, MS", "shrtnm": "Pascagoula, MS", "city": "Pascagoula", "t100": 0, "lon": -88.639, "lat": 30.671 }, { "gcode": "M37860", "nm": "Pensacola-Ferry Pass-Brent, FL", "shrtnm": "Pensacola, FL", "city": "Pensacola", "t100": 0, "lon": -87.159, "lat": 30.72 }, { "gcode": "M37900", "nm": "Peoria, IL", "shrtnm": "Peoria, IL", "city": "Peoria", "t100": 0, "lon": -89.516, "lat": 40.789 }, { "gcode": "M37980", "nm": "Philadelphia-Camden-Wilmington, PA-NJ-DE-MD", "shrtnm": "Philadelphia, PA-NJ-DE-MD", "city": "Philadelphia", "t100": 1, "lon": -75.301, "lat": 39.906 }, { "gcode": "M38060", "nm": "Phoenix-Mesa-Glendale, AZ", "shrtnm": "Phoenix, AZ", "city": "Phoenix", "t100": 1, "lon": -112.07, "lat": 33.186 }, { "gcode": "M38220", "nm": "Pine Bluff, AR", "shrtnm": "Pine Bluff, AR", "city": "Pine Bluff", "t100": 0, "lon": -91.95, "lat": 34.077 }, { "gcode": "M38300", "nm": "Pittsburgh, PA", "shrtnm": "Pittsburgh, PA", "city": "Pittsburgh", "t100": 1, "lon": -79.831, "lat": 40.439 }, { "gcode": "M38340", "nm": "Pittsfield, MA", "shrtnm": "Pittsfield, MA", "city": "Pittsfield", "t100": 0, "lon": -73.206, "lat": 42.371 }, { "gcode": "M38540", "nm": "Pocatello, ID", "shrtnm": "Pocatello, ID", "city": "Pocatello", "t100": 0, "lon": -112.57, "lat": 42.683 }, { "gcode": "M38860", "nm": "Portland-South Portland-Biddeford, ME", "shrtnm": "Portland, ME", "city": "Portland", "t100": 0, "lon": -70.478, "lat": 43.696 }, { "gcode": "M38900", "nm": "Portland-Vancouver-Hillsboro, OR-WA", "shrtnm": "Portland, OR-WA", "city": "Portland", "t100": 1, "lon": -122.48, "lat": 45.599 }, { "gcode": "M38940", "nm": "Port St. Lucie, FL", "shrtnm": "Port St. Lucie, FL", "city": "Port St. Lucie", "t100": 0, "lon": -80.459, "lat": 27.215 }, { "gcode": "M39100", "nm": "Poughkeepsie-Newburgh-Middletown, NY", "shrtnm": "Poughkeepsie, NY", "city": "Poughkeepsie", "t100": 1, "lon": -74.026, "lat": 41.583 }, { "gcode": "M39140", "nm": "Prescott, AZ", "shrtnm": "Prescott, AZ", "city": "Prescott", "t100": 0, "lon": -112.55, "lat": 34.6 }, { "gcode": "M39300", "nm": "Providence-New Bedford-Fall River, RI-MA", "shrtnm": "Providence, RI-MA", "city": "Providence", "t100": 1, "lon": -71.402, "lat": 41.72 }, { "gcode": "M39340", "nm": "Provo-Orem, UT", "shrtnm": "Provo, UT", "city": "Provo", "t100": 1, "lon": -112.35, "lat": 39.864 }, { "gcode": "M39380", "nm": "Pueblo, CO", "shrtnm": "Pueblo, CO", "city": "Pueblo", "t100": 0, "lon": -104.51, "lat": 38.173 }, { "gcode": "M39460", "nm": "Punta Gorda, FL", "shrtnm": "Punta Gorda, FL", "city": "Punta Gorda", "t100": 0, "lon": -81.898, "lat": 26.908 }, { "gcode": "M39540", "nm": "Racine, WI", "shrtnm": "Racine, WI", "city": "Racine", "t100": 0, "lon": -88.061, "lat": 42.747 }, { "gcode": "M39580", "nm": "Raleigh-Cary, NC", "shrtnm": "Raleigh, NC", "city": "Raleigh", "t100": 1, "lon": -78.461, "lat": 35.757 }, { "gcode": "M39660", "nm": "Rapid City, SD", "shrtnm": "Rapid City, SD", "city": "Rapid City", "t100": 0, "lon": -102.76, "lat": 44.318 }, { "gcode": "M39740", "nm": "Reading, PA", "shrtnm": "Reading, PA", "city": "Reading", "t100": 0, "lon": -75.926, "lat": 40.416 }, { "gcode": "M39820", "nm": "Redding, CA", "shrtnm": "Redding, CA", "city": "Redding", "t100": 0, "lon": -122.04, "lat": 40.764 }, { "gcode": "M39900", "nm": "Reno-Sparks, NV", "shrtnm": "Reno, NV", "city": "Reno", "t100": 0, "lon": -119.66, "lat": 40.618 }, { "gcode": "M40060", "nm": "Richmond, VA", "shrtnm": "Richmond, VA", "city": "Richmond", "t100": 1, "lon": -77.523, "lat": 37.524 }, { "gcode": "M40140", "nm": "Riverside-San Bernardino-Ontario, CA", "shrtnm": "Riverside, CA", "city": "Riverside", "t100": 1, "lon": -116.13, "lat": 34.552 }, { "gcode": "M40220", "nm": "Roanoke, VA", "shrtnm": "Roanoke, VA", "city": "Roanoke", "t100": 0, "lon": -79.947, "lat": 37.286 }, { "gcode": "M40340", "nm": "Rochester, MN", "shrtnm": "Rochester, MN", "city": "Rochester", "t100": 0, "lon": -92.467, "lat": 44.103 }, { "gcode": "M40380", "nm": "Rochester, NY", "shrtnm": "Rochester, NY", "city": "Rochester", "t100": 1, "lon": -77.559, "lat": 43.007 }, { "gcode": "M40420", "nm": "Rockford, IL", "shrtnm": "Rockford, IL", "city": "Rockford", "t100": 0, "lon": -89.042, "lat": 42.332 }, { "gcode": "M40580", "nm": "Rocky Mount, NC", "shrtnm": "Rocky Mount, NC", "city": "Rocky Mount", "t100": 0, "lon": -77.799, "lat": 35.941 }, { "gcode": "M40660", "nm": "Rome, GA", "shrtnm": "Rome, GA", "city": "Rome", "t100": 0, "lon": -85.214, "lat": 34.263 }, { "gcode": "M40900", "nm": "Sacramento--Arden-Arcade--Roseville, CA", "shrtnm": "Sacramento, CA", "city": "Sacramento", "t100": 1, "lon": -121, "lat": 38.78 }, { "gcode": "M40980", "nm": "Saginaw-Saginaw Township North, MI", "shrtnm": "Saginaw, MI", "city": "Saginaw", "t100": 0, "lon": -84.053, "lat": 43.335 }, { "gcode": "M41420", "nm": "Salem, OR", "shrtnm": "Salem, OR", "city": "Salem", "t100": 0, "lon": -122.9, "lat": 44.903 }, { "gcode": "M41500", "nm": "Salinas, CA", "shrtnm": "Salinas, CA", "city": "Salinas", "t100": 0, "lon": -121.24, "lat": 36.217 }, { "gcode": "M41540", "nm": "Salisbury, MD", "shrtnm": "Salisbury, MD", "city": "Salisbury", "t100": 0, "lon": -75.677, "lat": 38.256 }, { "gcode": "M41620", "nm": "Salt Lake City, UT", "shrtnm": "Salt Lake City, UT", "city": "Salt Lake City", "t100": 1, "lon": -112.62, "lat": 40.546 }, { "gcode": "M41660", "nm": "San Angelo, TX", "shrtnm": "San Angelo, TX", "city": "San Angelo", "t100": 0, "lon": -100.67, "lat": 31.364 }, { "gcode": "M41700", "nm": "San Antonio-New Braunfels, TX", "shrtnm": "San Antonio, TX", "city": "San Antonio", "t100": 1, "lon": -98.602, "lat": 29.427 }, { "gcode": "M41740", "nm": "San Diego-Carlsbad-San Marcos, CA", "shrtnm": "San Diego, CA", "city": "San Diego", "t100": 1, "lon": -116.73, "lat": 33.036 }, { "gcode": "M41780", "nm": "Sandusky, OH", "shrtnm": "Sandusky, OH", "city": "Sandusky", "t100": 0, "lon": -82.62, "lat": 41.364 }, { "gcode": "M41860", "nm": "San Francisco-Oakland-Fremont, CA", "shrtnm": "San Francisco, CA", "city": "San Francisco", "t100": 1, "lon": -122.16, "lat": 37.779 }, { "gcode": "M41940", "nm": "San Jose-Sunnyvale-Santa Clara, CA", "shrtnm": "San Jose, CA", "city": "San Jose", "t100": 1, "lon": -121.38, "lat": 36.909 }, { "gcode": "M42020", "nm": "San Luis Obispo-Paso Robles, CA", "shrtnm": "San Luis Obispo, CA", "city": "San Luis Obispo", "t100": 0, "lon": -120.4, "lat": 35.387 }, { "gcode": "M42060", "nm": "Santa Barbara-Santa Maria-Goleta, CA", "shrtnm": "Santa Barbara, CA", "city": "Santa Barbara", "t100": 0, "lon": -120.02, "lat": 34.673 }, { "gcode": "M42100", "nm": "Santa Cruz-Watsonville, CA", "shrtnm": "Santa Cruz, CA", "city": "Santa Cruz", "t100": 0, "lon": -122, "lat": 37.056 }, { "gcode": "M42140", "nm": "Santa Fe, NM", "shrtnm": "Santa Fe, NM", "city": "Santa Fe", "t100": 0, "lon": -105.98, "lat": 35.507 }, { "gcode": "M42220", "nm": "Santa Rosa-Petaluma, CA", "shrtnm": "Santa Rosa, CA", "city": "Santa Rosa", "t100": 0, "lon": -122.89, "lat": 38.528 }, { "gcode": "M42340", "nm": "Savannah, GA", "shrtnm": "Savannah, GA", "city": "Savannah", "t100": 0, "lon": -81.304, "lat": 32.134 }, { "gcode": "M42540", "nm": "Scranton--Wilkes-Barre, PA", "shrtnm": "Scranton, PA", "city": "Scranton", "t100": 1, "lon": -75.896, "lat": 41.323 }, { "gcode": "M42660", "nm": "Seattle-Tacoma-Bellevue, WA", "shrtnm": "Seattle, WA", "city": "Seattle", "t100": 1, "lon": -121.85, "lat": 47.557 }, { "gcode": "M42680", "nm": "Sebastian-Vero Beach, FL", "shrtnm": "Sebastian, FL", "city": "Sebastian", "t100": 0, "lon": -80.617, "lat": 27.693 }, { "gcode": "M43100", "nm": "Sheboygan, WI", "shrtnm": "Sheboygan, WI", "city": "Sheboygan", "t100": 0, "lon": -87.945, "lat": 43.721 }, { "gcode": "M43300", "nm": "Sherman-Denison, TX", "shrtnm": "Sherman, TX", "city": "Sherman", "t100": 0, "lon": -96.678, "lat": 33.627 }, { "gcode": "M43340", "nm": "Shreveport-Bossier City, LA", "shrtnm": "Shreveport, LA", "city": "Shreveport", "t100": 0, "lon": -93.745, "lat": 32.439 }, { "gcode": "M43580", "nm": "Sioux City, IA-NE-SD", "shrtnm": "Sioux City, IA-NE-SD", "city": "Sioux City", "t100": 0, "lon": -96.438, "lat": 42.513 }, { "gcode": "M43620", "nm": "Sioux Falls, SD", "shrtnm": "Sioux Falls, SD", "city": "Sioux Falls", "t100": 0, "lon": -96.99, "lat": 43.5 }, { "gcode": "M43780", "nm": "South Bend-Mishawaka, IN-MI", "shrtnm": "South Bend, IN-MI", "city": "South Bend", "t100": 0, "lon": -86.134, "lat": 41.774 }, { "gcode": "M43900", "nm": "Spartanburg, SC", "shrtnm": "Spartanburg, SC", "city": "Spartanburg", "t100": 0, "lon": -81.991, "lat": 34.931 }, { "gcode": "M44060", "nm": "Spokane, WA", "shrtnm": "Spokane, WA", "city": "Spokane", "t100": 0, "lon": -117.4, "lat": 47.621 }, { "gcode": "M44100", "nm": "Springfield, IL", "shrtnm": "Springfield, IL", "city": "Springfield", "t100": 0, "lon": -89.697, "lat": 39.83 }, { "gcode": "M44140", "nm": "Springfield, MA", "shrtnm": "Springfield, MA", "city": "Springfield", "t100": 1, "lon": -72.626, "lat": 42.365 }, { "gcode": "M44180", "nm": "Springfield, MO", "shrtnm": "Springfield, MO", "city": "Springfield", "t100": 0, "lon": -93.177, "lat": 37.362 }, { "gcode": "M44220", "nm": "Springfield, OH", "shrtnm": "Springfield, OH", "city": "Springfield", "t100": 0, "lon": -83.784, "lat": 39.917 }, { "gcode": "M44300", "nm": "State College, PA", "shrtnm": "State College, PA", "city": "State College", "t100": 0, "lon": -77.82, "lat": 40.919 }, { "gcode": "M41060", "nm": "St. Cloud, MN", "shrtnm": "St. Cloud, MN", "city": "St. Cloud", "t100": 0, "lon": -94.472, "lat": 45.586 }, { "gcode": "M44600", "nm": "Steubenville-Weirton, OH-WV", "shrtnm": "Steubenville, OH-WV", "city": "Steubenville", "t100": 0, "lon": -80.704, "lat": 40.388 }, { "gcode": "M41100", "nm": "St. George, UT", "shrtnm": "St. George, UT", "city": "St. George", "t100": 0, "lon": -113.5, "lat": 37.28 }, { "gcode": "M41140", "nm": "St. Joseph, MO-KS", "shrtnm": "St. Joseph, MO-KS", "city": "St. Joseph", "t100": 0, "lon": -94.784, "lat": 39.834 }, { "gcode": "M41180", "nm": "St. Louis, MO-IL", "shrtnm": "St. Louis, MO-IL", "city": "St. Louis", "t100": 1, "lon": -90.395, "lat": 38.669 }, { "gcode": "M44700", "nm": "Stockton, CA", "shrtnm": "Stockton, CA", "city": "Stockton", "t100": 1, "lon": -121.27, "lat": 37.934 }, { "gcode": "M44940", "nm": "Sumter, SC", "shrtnm": "Sumter, SC", "city": "Sumter", "t100": 0, "lon": -80.382, "lat": 33.916 }, { "gcode": "M45060", "nm": "Syracuse, NY", "shrtnm": "Syracuse, NY", "city": "Syracuse", "t100": 1, "lon": -76.033, "lat": 43.154 }, { "gcode": "M45220", "nm": "Tallahassee, FL", "shrtnm": "Tallahassee, FL", "city": "Tallahassee", "t100": 0, "lon": -84.286, "lat": 30.407 }, { "gcode": "M45300", "nm": "Tampa-St. Petersburg-Clearwater, FL", "shrtnm": "Tampa, FL", "city": "Tampa", "t100": 1, "lon": -82.399, "lat": 28.157 }, { "gcode": "M45460", "nm": "Terre Haute, IN", "shrtnm": "Terre Haute, IN", "city": "Terre Haute", "t100": 0, "lon": -87.344, "lat": 39.392 }, { "gcode": "M45500", "nm": "Texarkana, TX-AR", "shrtnm": "Texarkana, TX-AR", "city": "Texarkana", "t100": 0, "lon": -94.206, "lat": 33.391 }, { "gcode": "M45780", "nm": "Toledo, OH", "shrtnm": "Toledo, OH", "city": "Toledo", "t100": 1, "lon": -83.68, "lat": 41.504 }, { "gcode": "M45820", "nm": "Topeka, KS", "shrtnm": "Topeka, KS", "city": "Topeka", "t100": 0, "lon": -95.803, "lat": 39.044 }, { "gcode": "M45940", "nm": "Trenton-Ewing, NJ", "shrtnm": "Trenton, NJ", "city": "Trenton", "t100": 0, "lon": -74.702, "lat": 40.283 }, { "gcode": "M46060", "nm": "Tucson, AZ", "shrtnm": "Tucson, AZ", "city": "Tucson", "t100": 1, "lon": -111.79, "lat": 32.097 }, { "gcode": "M46140", "nm": "Tulsa, OK", "shrtnm": "Tulsa, OK", "city": "Tulsa", "t100": 1, "lon": -96.166, "lat": 36.25 }, { "gcode": "M46220", "nm": "Tuscaloosa, AL", "shrtnm": "Tuscaloosa, AL", "city": "Tuscaloosa", "t100": 0, "lon": -87.656, "lat": 33.053 }, { "gcode": "M46340", "nm": "Tyler, TX", "shrtnm": "Tyler, TX", "city": "Tyler", "t100": 0, "lon": -95.269, "lat": 32.375 }, { "gcode": "M46540", "nm": "Utica-Rome, NY", "shrtnm": "Utica, NY", "city": "Utica", "t100": 0, "lon": -75.181, "lat": 43.337 }, { "gcode": "M46660", "nm": "Valdosta, GA", "shrtnm": "Valdosta, GA", "city": "Valdosta", "t100": 0, "lon": -83.242, "lat": 30.829 }, { "gcode": "M46700", "nm": "Vallejo-Fairfield, CA", "shrtnm": "Vallejo, CA", "city": "Vallejo", "t100": 0, "lon": -121.93, "lat": 38.27 }, { "gcode": "M47020", "nm": "Victoria, TX", "shrtnm": "Victoria, TX", "city": "Victoria", "t100": 0, "lon": -97.068, "lat": 28.673 }, { "gcode": "M47220", "nm": "Vineland-Millville-Bridgeton, NJ", "shrtnm": "Vineland, NJ", "city": "Vineland", "t100": 0, "lon": -75.111, "lat": 39.373 }, { "gcode": "M47260", "nm": "Virginia Beach-Norfolk-Newport News, VA-NC", "shrtnm": "Virginia Beach, VA-NC", "city": "Virginia Beach", "t100": 1, "lon": -76.483, "lat": 36.918 }, { "gcode": "M47300", "nm": "Visalia-Porterville, CA", "shrtnm": "Visalia, CA", "city": "Visalia", "t100": 0, "lon": -118.8, "lat": 36.22 }, { "gcode": "M47380", "nm": "Waco, TX", "shrtnm": "Waco, TX", "city": "Waco", "t100": 0, "lon": -97.202, "lat": 31.552 }, { "gcode": "M47580", "nm": "Warner Robins, GA", "shrtnm": "Warner Robins, GA", "city": "Warner Robins", "t100": 0, "lon": -83.666, "lat": 32.459 }, { "gcode": "M47900", "nm": "Washington-Arlington-Alexandria, DC-VA-MD-WV", "shrtnm": "Washington, DC-VA-MD-WV", "city": "Washington", "t100": 1, "lon": -77.401, "lat": 38.85 }, { "gcode": "M47940", "nm": "Waterloo-Cedar Falls, IA", "shrtnm": "Waterloo, IA", "city": "Waterloo", "t100": 0, "lon": -92.471, "lat": 42.536 }, { "gcode": "M48140", "nm": "Wausau, WI", "shrtnm": "Wausau, WI", "city": "Wausau", "t100": 0, "lon": -89.759, "lat": 44.898 }, { "gcode": "M48300", "nm": "Wenatchee-East Wenatchee, WA", "shrtnm": "Wenatchee, WA", "city": "Wenatchee", "t100": 0, "lon": -120.27, "lat": 47.818 }, { "gcode": "M48540", "nm": "Wheeling, WV-OH", "shrtnm": "Wheeling, WV-OH", "city": "Wheeling", "t100": 0, "lon": -80.841, "lat": 39.975 }, { "gcode": "M48660", "nm": "Wichita Falls, TX", "shrtnm": "Wichita Falls, TX", "city": "Wichita Falls", "t100": 0, "lon": -98.491, "lat": 33.775 }, { "gcode": "M48620", "nm": "Wichita, KS", "shrtnm": "Wichita, KS", "city": "Wichita", "t100": 1, "lon": -97.245, "lat": 37.639 }, { "gcode": "M48700", "nm": "Williamsport, PA", "shrtnm": "Williamsport, PA", "city": "Williamsport", "t100": 0, "lon": -77.064, "lat": 41.343 }, { "gcode": "M48900", "nm": "Wilmington, NC", "shrtnm": "Wilmington, NC", "city": "Wilmington", "t100": 0, "lon": -78.055, "lat": 34.296 }, { "gcode": "M49020", "nm": "Winchester, VA-WV", "shrtnm": "Winchester, VA-WV", "city": "Winchester", "t100": 0, "lon": -78.474, "lat": 39.272 }, { "gcode": "M49180", "nm": "Winston-Salem, NC", "shrtnm": "Winston, NC", "city": "Winston", "t100": 0, "lon": -80.397, "lat": 36.185 }, { "gcode": "M49340", "nm": "Worcester, MA", "shrtnm": "Worcester, MA", "city": "Worcester", "t100": 1, "lon": -71.908, "lat": 42.351 }, { "gcode": "M49420", "nm": "Yakima, WA", "shrtnm": "Yakima, WA", "city": "Yakima", "t100": 0, "lon": -120.74, "lat": 46.457 }, { "gcode": "M49620", "nm": "York-Hanover, PA", "shrtnm": "York, PA", "city": "York", "t100": 0, "lon": -76.727, "lat": 39.92 }, { "gcode": "M49660", "nm": "Youngstown-Warren-Boardman, OH-PA", "shrtnm": "Youngstown, OH-PA", "city": "Youngstown", "t100": 1, "lon": -80.567, "lat": 41.238 }, { "gcode": "M49700", "nm": "Yuba City, CA", "shrtnm": "Yuba City, CA", "city": "Yuba City", "t100": 0, "lon": -121.52, "lat": 39.155 }, { "gcode": "M49740", "nm": "Yuma, AZ", "shrtnm": "Yuma, AZ", "city": "Yuma", "t100": 0, "lon": -113.91, "lat": 32.769 } ];
  	
  	var __return__ = {};
  	__return__.success = 0; //-1==failure, 1==success, 0==default

  	//narrow the universe of metros, if necessary
  	if(!top100){var __metros__ = metros;}
  	else{
  		var __metros__ = [];
	  	//default is to return just the top 100
	  	for(var i=0;i<metros.length;i++){
	  		if(metros[i].t100===1){
	  			__metros__.push(metros[i]);
	  		}
	  	}
  	}

  	__return__.metros = __metros__; //universe of metros, defined above
  	__return__.loc = {lon:null,lat:null}; //user lat/lon
  	__return__.closest = null; //hold an array of metro areas sorted by distance from user location

	function setPosition(position){
		scopeObject.$apply(function(arg){
			var lon = position.coords.longitude;
			var lat = position.coords.latitude;

			var d = [];
			for(var i=0;i<__metros__.length;i++){
				var dx = __metros__[i].lon - lon;
				var dy = __metros__[i].lat - lat;
				d.push({ gcode:__metros__[i].gcode, city:__metros__[i].city, d:(Math.pow(dx,2)+Math.pow(dy,2)) })
			}

			d.sort(function(a,b){
				return a.d-b.d <= 0 ? -1 : 1;
			})

			__return__.closest= d;
			__return__.loc.lon= lon;
			__return__.loc.lat= lat;
			__return__.success = 1; //success
		});
  	}

  	function geoError(e){
  		//console.log(e.code + ": " + e.message);
  		scopeObject.$apply(function(){
			__return__.success= -1;
		});
  	}

  	var geoConfig = {timeout:3000}

  	//location awareness
  	if ("geolocation" in navigator && haveScope){
    	navigator.geolocation.getCurrentPosition(setPosition,geoError,geoConfig);
    }
    return __return__;
  }
  return ls;
}]);